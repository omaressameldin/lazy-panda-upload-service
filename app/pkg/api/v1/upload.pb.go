// Code generated by protoc-gen-go. DO NOT EDIT.
// source: upload.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type UploadStatusCode int32

const (
	UploadStatusCode_Unknown UploadStatusCode = 0
	UploadStatusCode_Ok      UploadStatusCode = 1
	UploadStatusCode_Failed  UploadStatusCode = 2
)

var UploadStatusCode_name = map[int32]string{
	0: "Unknown",
	1: "Ok",
	2: "Failed",
}

var UploadStatusCode_value = map[string]int32{
	"Unknown": 0,
	"Ok":      1,
	"Failed":  2,
}

func (x UploadStatusCode) String() string {
	return proto.EnumName(UploadStatusCode_name, int32(x))
}

func (UploadStatusCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_91b94b655bd2a7e5, []int{0}
}

type UploadRequest struct {
	Api                  string   `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	Filename             string   `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadRequest) Reset()         { *m = UploadRequest{} }
func (m *UploadRequest) String() string { return proto.CompactTextString(m) }
func (*UploadRequest) ProtoMessage()    {}
func (*UploadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_91b94b655bd2a7e5, []int{0}
}

func (m *UploadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadRequest.Unmarshal(m, b)
}
func (m *UploadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadRequest.Marshal(b, m, deterministic)
}
func (m *UploadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadRequest.Merge(m, src)
}
func (m *UploadRequest) XXX_Size() int {
	return xxx_messageInfo_UploadRequest.Size(m)
}
func (m *UploadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UploadRequest proto.InternalMessageInfo

func (m *UploadRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *UploadRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

type UploadFileRequest struct {
	// Types that are valid to be assigned to FileData:
	//	*UploadFileRequest_Content
	//	*UploadFileRequest_Meta
	FileData             isUploadFileRequest_FileData `protobuf_oneof:"fileData"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *UploadFileRequest) Reset()         { *m = UploadFileRequest{} }
func (m *UploadFileRequest) String() string { return proto.CompactTextString(m) }
func (*UploadFileRequest) ProtoMessage()    {}
func (*UploadFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_91b94b655bd2a7e5, []int{1}
}

func (m *UploadFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadFileRequest.Unmarshal(m, b)
}
func (m *UploadFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadFileRequest.Marshal(b, m, deterministic)
}
func (m *UploadFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadFileRequest.Merge(m, src)
}
func (m *UploadFileRequest) XXX_Size() int {
	return xxx_messageInfo_UploadFileRequest.Size(m)
}
func (m *UploadFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UploadFileRequest proto.InternalMessageInfo

type isUploadFileRequest_FileData interface {
	isUploadFileRequest_FileData()
}

type UploadFileRequest_Content struct {
	Content []byte `protobuf:"bytes,1,opt,name=content,proto3,oneof"`
}

type UploadFileRequest_Meta struct {
	Meta *Metadata `protobuf:"bytes,2,opt,name=meta,proto3,oneof"`
}

func (*UploadFileRequest_Content) isUploadFileRequest_FileData() {}

func (*UploadFileRequest_Meta) isUploadFileRequest_FileData() {}

func (m *UploadFileRequest) GetFileData() isUploadFileRequest_FileData {
	if m != nil {
		return m.FileData
	}
	return nil
}

func (m *UploadFileRequest) GetContent() []byte {
	if x, ok := m.GetFileData().(*UploadFileRequest_Content); ok {
		return x.Content
	}
	return nil
}

func (m *UploadFileRequest) GetMeta() *Metadata {
	if x, ok := m.GetFileData().(*UploadFileRequest_Meta); ok {
		return x.Meta
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*UploadFileRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _UploadFileRequest_OneofMarshaler, _UploadFileRequest_OneofUnmarshaler, _UploadFileRequest_OneofSizer, []interface{}{
		(*UploadFileRequest_Content)(nil),
		(*UploadFileRequest_Meta)(nil),
	}
}

func _UploadFileRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*UploadFileRequest)
	// fileData
	switch x := m.FileData.(type) {
	case *UploadFileRequest_Content:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.Content)
	case *UploadFileRequest_Meta:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Meta); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("UploadFileRequest.FileData has unexpected type %T", x)
	}
	return nil
}

func _UploadFileRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*UploadFileRequest)
	switch tag {
	case 1: // fileData.content
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.FileData = &UploadFileRequest_Content{x}
		return true, err
	case 2: // fileData.meta
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Metadata)
		err := b.DecodeMessage(msg)
		m.FileData = &UploadFileRequest_Meta{msg}
		return true, err
	default:
		return false, nil
	}
}

func _UploadFileRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*UploadFileRequest)
	// fileData
	switch x := m.FileData.(type) {
	case *UploadFileRequest_Content:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Content)))
		n += len(x.Content)
	case *UploadFileRequest_Meta:
		s := proto.Size(x.Meta)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Metadata struct {
	Auth                 string   `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	FileName             string   `protobuf:"bytes,2,opt,name=fileName,proto3" json:"fileName,omitempty"`
	FileType             string   `protobuf:"bytes,3,opt,name=fileType,proto3" json:"fileType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Metadata) Reset()         { *m = Metadata{} }
func (m *Metadata) String() string { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()    {}
func (*Metadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_91b94b655bd2a7e5, []int{2}
}

func (m *Metadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metadata.Unmarshal(m, b)
}
func (m *Metadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metadata.Marshal(b, m, deterministic)
}
func (m *Metadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metadata.Merge(m, src)
}
func (m *Metadata) XXX_Size() int {
	return xxx_messageInfo_Metadata.Size(m)
}
func (m *Metadata) XXX_DiscardUnknown() {
	xxx_messageInfo_Metadata.DiscardUnknown(m)
}

var xxx_messageInfo_Metadata proto.InternalMessageInfo

func (m *Metadata) GetAuth() string {
	if m != nil {
		return m.Auth
	}
	return ""
}

func (m *Metadata) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *Metadata) GetFileType() string {
	if m != nil {
		return m.FileType
	}
	return ""
}

type UploadStatusResponse struct {
	Api                  string           `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	Message              string           `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	Code                 UploadStatusCode `protobuf:"varint,3,opt,name=Code,proto3,enum=v1.UploadStatusCode" json:"Code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *UploadStatusResponse) Reset()         { *m = UploadStatusResponse{} }
func (m *UploadStatusResponse) String() string { return proto.CompactTextString(m) }
func (*UploadStatusResponse) ProtoMessage()    {}
func (*UploadStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_91b94b655bd2a7e5, []int{3}
}

func (m *UploadStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadStatusResponse.Unmarshal(m, b)
}
func (m *UploadStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadStatusResponse.Marshal(b, m, deterministic)
}
func (m *UploadStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadStatusResponse.Merge(m, src)
}
func (m *UploadStatusResponse) XXX_Size() int {
	return xxx_messageInfo_UploadStatusResponse.Size(m)
}
func (m *UploadStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UploadStatusResponse proto.InternalMessageInfo

func (m *UploadStatusResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *UploadStatusResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UploadStatusResponse) GetCode() UploadStatusCode {
	if m != nil {
		return m.Code
	}
	return UploadStatusCode_Unknown
}

func init() {
	proto.RegisterEnum("v1.UploadStatusCode", UploadStatusCode_name, UploadStatusCode_value)
	proto.RegisterType((*UploadRequest)(nil), "v1.UploadRequest")
	proto.RegisterType((*UploadFileRequest)(nil), "v1.UploadFileRequest")
	proto.RegisterType((*Metadata)(nil), "v1.Metadata")
	proto.RegisterType((*UploadStatusResponse)(nil), "v1.UploadStatusResponse")
}

func init() { proto.RegisterFile("upload.proto", fileDescriptor_91b94b655bd2a7e5) }

var fileDescriptor_91b94b655bd2a7e5 = []byte{
	// 308 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x51, 0x41, 0x4f, 0xf2, 0x40,
	0x10, 0xa5, 0x85, 0x14, 0xbe, 0x81, 0xcf, 0xd4, 0x09, 0x26, 0x0d, 0x27, 0xd3, 0x13, 0xf1, 0x40,
	0x02, 0x1c, 0x8d, 0x17, 0x35, 0x84, 0x83, 0x68, 0xb2, 0x88, 0x57, 0x33, 0xd2, 0x51, 0x1b, 0xca,
	0x6e, 0x65, 0xb7, 0x18, 0xff, 0xbd, 0xe9, 0xd6, 0x15, 0xd2, 0x78, 0x9b, 0xf7, 0x5e, 0xfb, 0xe6,
	0xbd, 0x1d, 0xe8, 0x15, 0x79, 0xa6, 0x28, 0x19, 0xe5, 0x3b, 0x65, 0x14, 0xfa, 0xfb, 0x71, 0x7c,
	0x05, 0xff, 0x57, 0x96, 0x13, 0xfc, 0x51, 0xb0, 0x36, 0x18, 0x42, 0x93, 0xf2, 0x34, 0xf2, 0xce,
	0xbd, 0xe1, 0x3f, 0x51, 0x8e, 0x38, 0x80, 0xce, 0x6b, 0x9a, 0xb1, 0xa4, 0x2d, 0x47, 0xbe, 0xa5,
	0x7f, 0x71, 0xfc, 0x0c, 0xa7, 0xd5, 0xef, 0xb3, 0x34, 0x63, 0x67, 0x31, 0x80, 0xf6, 0x5a, 0x49,
	0xc3, 0xd2, 0x58, 0x9b, 0xde, 0xbc, 0x21, 0x1c, 0x81, 0x31, 0xb4, 0xb6, 0x6c, 0xc8, 0x1a, 0x75,
	0x27, 0xbd, 0xd1, 0x7e, 0x3c, 0x5a, 0xb0, 0xa1, 0x84, 0x0c, 0xcd, 0x1b, 0xc2, 0x6a, 0xd7, 0x50,
	0x2d, 0xbc, 0x25, 0x43, 0xf1, 0x13, 0x74, 0x9c, 0x8e, 0x08, 0x2d, 0x2a, 0xcc, 0xfb, 0x4f, 0x36,
	0x3b, 0xbb, 0x70, 0xf7, 0xb5, 0x70, 0x25, 0x76, 0xda, 0xe3, 0x57, 0xce, 0x51, 0xf3, 0xa0, 0x95,
	0x38, 0xce, 0xa0, 0x5f, 0x05, 0x5f, 0x1a, 0x32, 0x85, 0x16, 0xac, 0x73, 0x25, 0x35, 0xff, 0x51,
	0x3f, 0x82, 0xf6, 0x82, 0xb5, 0xa6, 0x37, 0xb7, 0xc0, 0x41, 0x1c, 0x42, 0xeb, 0x46, 0x25, 0x95,
	0xf7, 0xc9, 0xa4, 0x5f, 0x76, 0x39, 0xf6, 0x2c, 0x35, 0x61, 0xbf, 0xb8, 0x98, 0x42, 0x58, 0x57,
	0xb0, 0x0b, 0xed, 0x95, 0xdc, 0x48, 0xf5, 0x29, 0xc3, 0x06, 0x06, 0xe0, 0x3f, 0x6c, 0x42, 0x0f,
	0x01, 0x82, 0x19, 0xa5, 0x19, 0x27, 0xa1, 0x3f, 0xb9, 0x73, 0xa7, 0x59, 0xf2, 0x6e, 0x9f, 0xae,
	0x19, 0x2f, 0x21, 0xa8, 0x08, 0x3c, 0x3b, 0xec, 0x3a, 0x7a, 0xf8, 0x41, 0x54, 0x8f, 0xe0, 0x6a,
	0x0d, 0xbd, 0x97, 0xc0, 0xde, 0x7c, 0xfa, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x02, 0xef, 0xe9, 0x84,
	0x03, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UploadServiceClient is the client API for UploadService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UploadServiceClient interface {
	Upload(ctx context.Context, opts ...grpc.CallOption) (UploadService_UploadClient, error)
}

type uploadServiceClient struct {
	cc *grpc.ClientConn
}

func NewUploadServiceClient(cc *grpc.ClientConn) UploadServiceClient {
	return &uploadServiceClient{cc}
}

func (c *uploadServiceClient) Upload(ctx context.Context, opts ...grpc.CallOption) (UploadService_UploadClient, error) {
	stream, err := c.cc.NewStream(ctx, &_UploadService_serviceDesc.Streams[0], "/v1.UploadService/Upload", opts...)
	if err != nil {
		return nil, err
	}
	x := &uploadServiceUploadClient{stream}
	return x, nil
}

type UploadService_UploadClient interface {
	Send(*UploadFileRequest) error
	CloseAndRecv() (*UploadStatusResponse, error)
	grpc.ClientStream
}

type uploadServiceUploadClient struct {
	grpc.ClientStream
}

func (x *uploadServiceUploadClient) Send(m *UploadFileRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *uploadServiceUploadClient) CloseAndRecv() (*UploadStatusResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(UploadStatusResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// UploadServiceServer is the server API for UploadService service.
type UploadServiceServer interface {
	Upload(UploadService_UploadServer) error
}

func RegisterUploadServiceServer(s *grpc.Server, srv UploadServiceServer) {
	s.RegisterService(&_UploadService_serviceDesc, srv)
}

func _UploadService_Upload_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(UploadServiceServer).Upload(&uploadServiceUploadServer{stream})
}

type UploadService_UploadServer interface {
	SendAndClose(*UploadStatusResponse) error
	Recv() (*UploadFileRequest, error)
	grpc.ServerStream
}

type uploadServiceUploadServer struct {
	grpc.ServerStream
}

func (x *uploadServiceUploadServer) SendAndClose(m *UploadStatusResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *uploadServiceUploadServer) Recv() (*UploadFileRequest, error) {
	m := new(UploadFileRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _UploadService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.UploadService",
	HandlerType: (*UploadServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Upload",
			Handler:       _UploadService_Upload_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "upload.proto",
}
